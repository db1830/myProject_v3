****Blackjack-Game****

To do list's:

1. Solution for leaving the game (button not realsed) with the two users, from 'divGame' to 'divLobby' and opposite.





business logic instructions:

1. Creating a deck of cards:  represent the deck of cards as an array of objects, 
with each object representing a card, containing a "value" and a "suit" property.

2. Shuffling the deck:  ways to shuffle an array in JavaScript,  
simple way is to loop through the array and swap each element with a random element in the array.

3. Dealing the cards: represent the dealer and player hands as arrays. 
to deal a card, simply pop the top card from the deck array and add it to the player or dealer's hand array.

4. Implement the game logic: In blackjack, the goal is to get a hand value as close to 21 as possible without going over.
 You can calculate the hand value by adding up the values of the cards in the hand, 
 where face cards are worth 10 and aces are worth either 1 or 11 (whichever value gives the player the best hand). 
 If a player's hand value exceeds 21, they bust and lose the game.

5. need to allow the player to hit or stand: After the first deal, 
the player can choose to hit (receive another card) or stand (keep their current hand). can implement this using buttons.

6. Implement the dealer's turn: Once the player has stood, the dealer must draw cards until their hand value is at least 17.
 If the dealer busts, the player wins. Otherwise, the player's hand value is compared to the dealer's hand value to determine the winner.

7. Display the game state: display the current state of the game, including the player's and dealer's hands, the deck, and the current score.

8. Allowing the player to play again: after the game is over, allow the player to play again by resetting the deck and hands.









sec.to do list:

A. סידור הקוד מחדש-
פירוק הפונקציות הלא מובנות או הגורמות לבאגים

B. איתור באגים-

C. שימוש בגיטהאב קודם לכל

D. 'שימוש בלוקאלסטורג

To Do List:


1. Create 2 queries that saving the players and the dealer hands.
* check route params (have dealar hand or not)
* first query for init time (dealer and two players).
* second query for only 2  players.

2. use try and catch for api requests.

3. clean the code!
